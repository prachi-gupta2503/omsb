/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package gov.omsb.tms.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import gov.omsb.tms.model.DutyAssignment;
import gov.omsb.tms.model.DutyAssignmentModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the DutyAssignment service. Represents a row in the &quot;duty_assignment_master&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>DutyAssignmentModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DutyAssignmentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DutyAssignmentImpl
 * @generated
 */
@JSON(strict = true)
public class DutyAssignmentModelImpl
	extends BaseModelImpl<DutyAssignment> implements DutyAssignmentModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a duty assignment model instance should use the <code>DutyAssignment</code> interface instead.
	 */
	public static final String TABLE_NAME = "duty_assignment_master";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"duty_assignment_id", Types.BIGINT},
		{"group_id", Types.BIGINT}, {"company_id", Types.BIGINT},
		{"create_date", Types.TIMESTAMP}, {"created_by", Types.BIGINT},
		{"modified_date", Types.TIMESTAMP}, {"modified_by", Types.BIGINT},
		{"duty_type_id", Types.BIGINT}, {"assignment", Types.VARCHAR},
		{"status", Types.VARCHAR}, {"color_code", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("duty_assignment_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("group_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("company_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("create_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("created_by", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modified_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modified_by", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("duty_type_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("assignment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("color_code", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table duty_assignment_master (uuid_ VARCHAR(75) null,duty_assignment_id LONG not null primary key,group_id LONG,company_id LONG,create_date DATE null,created_by LONG,modified_date DATE null,modified_by LONG,duty_type_id LONG,assignment VARCHAR(75) null,status VARCHAR(75) null,color_code VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table duty_assignment_master";

	public static final String ORDER_BY_JPQL =
		" ORDER BY dutyAssignment.dutyAssignmentId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY duty_assignment_master.duty_assignment_id ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ASSIGNMENT_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DUTYTYPEID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DUTYASSIGNMENTID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public DutyAssignmentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dutyAssignmentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDutyAssignmentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dutyAssignmentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DutyAssignment.class;
	}

	@Override
	public String getModelClassName() {
		return DutyAssignment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<DutyAssignment, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<DutyAssignment, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DutyAssignment, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((DutyAssignment)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<DutyAssignment, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<DutyAssignment, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(DutyAssignment)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<DutyAssignment, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<DutyAssignment, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<DutyAssignment, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<DutyAssignment, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<DutyAssignment, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<DutyAssignment, Object>>();
		Map<String, BiConsumer<DutyAssignment, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<DutyAssignment, ?>>();

		attributeGetterFunctions.put("uuid", DutyAssignment::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<DutyAssignment, String>)DutyAssignment::setUuid);
		attributeGetterFunctions.put(
			"dutyAssignmentId", DutyAssignment::getDutyAssignmentId);
		attributeSetterBiConsumers.put(
			"dutyAssignmentId",
			(BiConsumer<DutyAssignment, Long>)
				DutyAssignment::setDutyAssignmentId);
		attributeGetterFunctions.put("groupId", DutyAssignment::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<DutyAssignment, Long>)DutyAssignment::setGroupId);
		attributeGetterFunctions.put("companyId", DutyAssignment::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<DutyAssignment, Long>)DutyAssignment::setCompanyId);
		attributeGetterFunctions.put(
			"createDate", DutyAssignment::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<DutyAssignment, Date>)DutyAssignment::setCreateDate);
		attributeGetterFunctions.put("createdBy", DutyAssignment::getCreatedBy);
		attributeSetterBiConsumers.put(
			"createdBy",
			(BiConsumer<DutyAssignment, Long>)DutyAssignment::setCreatedBy);
		attributeGetterFunctions.put(
			"modifiedDate", DutyAssignment::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<DutyAssignment, Date>)DutyAssignment::setModifiedDate);
		attributeGetterFunctions.put(
			"modifiedBy", DutyAssignment::getModifiedBy);
		attributeSetterBiConsumers.put(
			"modifiedBy",
			(BiConsumer<DutyAssignment, Long>)DutyAssignment::setModifiedBy);
		attributeGetterFunctions.put(
			"dutyTypeId", DutyAssignment::getDutyTypeId);
		attributeSetterBiConsumers.put(
			"dutyTypeId",
			(BiConsumer<DutyAssignment, Long>)DutyAssignment::setDutyTypeId);
		attributeGetterFunctions.put(
			"assignment", DutyAssignment::getAssignment);
		attributeSetterBiConsumers.put(
			"assignment",
			(BiConsumer<DutyAssignment, String>)DutyAssignment::setAssignment);
		attributeGetterFunctions.put("status", DutyAssignment::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<DutyAssignment, String>)DutyAssignment::setStatus);
		attributeGetterFunctions.put("colorCode", DutyAssignment::getColorCode);
		attributeSetterBiConsumers.put(
			"colorCode",
			(BiConsumer<DutyAssignment, String>)DutyAssignment::setColorCode);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getDutyAssignmentId() {
		return _dutyAssignmentId;
	}

	@Override
	public void setDutyAssignmentId(long dutyAssignmentId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dutyAssignmentId = dutyAssignmentId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("group_id"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("company_id"));
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdBy = createdBy;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedBy = modifiedBy;
	}

	@JSON
	@Override
	public long getDutyTypeId() {
		return _dutyTypeId;
	}

	@Override
	public void setDutyTypeId(long dutyTypeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dutyTypeId = dutyTypeId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalDutyTypeId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("duty_type_id"));
	}

	@JSON
	@Override
	public String getAssignment() {
		if (_assignment == null) {
			return "";
		}
		else {
			return _assignment;
		}
	}

	@Override
	public void setAssignment(String assignment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_assignment = assignment;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalAssignment() {
		return getColumnOriginalValue("assignment");
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalStatus() {
		return getColumnOriginalValue("status");
	}

	@JSON
	@Override
	public String getColorCode() {
		if (_colorCode == null) {
			return "";
		}
		else {
			return _colorCode;
		}
	}

	@Override
	public void setColorCode(String colorCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_colorCode = colorCode;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(DutyAssignment.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), DutyAssignment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DutyAssignment toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, DutyAssignment>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DutyAssignmentImpl dutyAssignmentImpl = new DutyAssignmentImpl();

		dutyAssignmentImpl.setUuid(getUuid());
		dutyAssignmentImpl.setDutyAssignmentId(getDutyAssignmentId());
		dutyAssignmentImpl.setGroupId(getGroupId());
		dutyAssignmentImpl.setCompanyId(getCompanyId());
		dutyAssignmentImpl.setCreateDate(getCreateDate());
		dutyAssignmentImpl.setCreatedBy(getCreatedBy());
		dutyAssignmentImpl.setModifiedDate(getModifiedDate());
		dutyAssignmentImpl.setModifiedBy(getModifiedBy());
		dutyAssignmentImpl.setDutyTypeId(getDutyTypeId());
		dutyAssignmentImpl.setAssignment(getAssignment());
		dutyAssignmentImpl.setStatus(getStatus());
		dutyAssignmentImpl.setColorCode(getColorCode());

		dutyAssignmentImpl.resetOriginalValues();

		return dutyAssignmentImpl;
	}

	@Override
	public DutyAssignment cloneWithOriginalValues() {
		DutyAssignmentImpl dutyAssignmentImpl = new DutyAssignmentImpl();

		dutyAssignmentImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		dutyAssignmentImpl.setDutyAssignmentId(
			this.<Long>getColumnOriginalValue("duty_assignment_id"));
		dutyAssignmentImpl.setGroupId(
			this.<Long>getColumnOriginalValue("group_id"));
		dutyAssignmentImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("company_id"));
		dutyAssignmentImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("create_date"));
		dutyAssignmentImpl.setCreatedBy(
			this.<Long>getColumnOriginalValue("created_by"));
		dutyAssignmentImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modified_date"));
		dutyAssignmentImpl.setModifiedBy(
			this.<Long>getColumnOriginalValue("modified_by"));
		dutyAssignmentImpl.setDutyTypeId(
			this.<Long>getColumnOriginalValue("duty_type_id"));
		dutyAssignmentImpl.setAssignment(
			this.<String>getColumnOriginalValue("assignment"));
		dutyAssignmentImpl.setStatus(
			this.<String>getColumnOriginalValue("status"));
		dutyAssignmentImpl.setColorCode(
			this.<String>getColumnOriginalValue("color_code"));

		return dutyAssignmentImpl;
	}

	@Override
	public int compareTo(DutyAssignment dutyAssignment) {
		long primaryKey = dutyAssignment.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof DutyAssignment)) {
			return false;
		}

		DutyAssignment dutyAssignment = (DutyAssignment)object;

		long primaryKey = dutyAssignment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<DutyAssignment> toCacheModel() {
		DutyAssignmentCacheModel dutyAssignmentCacheModel =
			new DutyAssignmentCacheModel();

		dutyAssignmentCacheModel.uuid = getUuid();

		String uuid = dutyAssignmentCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			dutyAssignmentCacheModel.uuid = null;
		}

		dutyAssignmentCacheModel.dutyAssignmentId = getDutyAssignmentId();

		dutyAssignmentCacheModel.groupId = getGroupId();

		dutyAssignmentCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			dutyAssignmentCacheModel.createDate = createDate.getTime();
		}
		else {
			dutyAssignmentCacheModel.createDate = Long.MIN_VALUE;
		}

		dutyAssignmentCacheModel.createdBy = getCreatedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dutyAssignmentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dutyAssignmentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dutyAssignmentCacheModel.modifiedBy = getModifiedBy();

		dutyAssignmentCacheModel.dutyTypeId = getDutyTypeId();

		dutyAssignmentCacheModel.assignment = getAssignment();

		String assignment = dutyAssignmentCacheModel.assignment;

		if ((assignment != null) && (assignment.length() == 0)) {
			dutyAssignmentCacheModel.assignment = null;
		}

		dutyAssignmentCacheModel.status = getStatus();

		String status = dutyAssignmentCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			dutyAssignmentCacheModel.status = null;
		}

		dutyAssignmentCacheModel.colorCode = getColorCode();

		String colorCode = dutyAssignmentCacheModel.colorCode;

		if ((colorCode != null) && (colorCode.length() == 0)) {
			dutyAssignmentCacheModel.colorCode = null;
		}

		return dutyAssignmentCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<DutyAssignment, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<DutyAssignment, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DutyAssignment, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((DutyAssignment)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, DutyAssignment>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					DutyAssignment.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _dutyAssignmentId;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private long _createdBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _modifiedBy;
	private long _dutyTypeId;
	private String _assignment;
	private String _status;
	private String _colorCode;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<DutyAssignment, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((DutyAssignment)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("duty_assignment_id", _dutyAssignmentId);
		_columnOriginalValues.put("group_id", _groupId);
		_columnOriginalValues.put("company_id", _companyId);
		_columnOriginalValues.put("create_date", _createDate);
		_columnOriginalValues.put("created_by", _createdBy);
		_columnOriginalValues.put("modified_date", _modifiedDate);
		_columnOriginalValues.put("modified_by", _modifiedBy);
		_columnOriginalValues.put("duty_type_id", _dutyTypeId);
		_columnOriginalValues.put("assignment", _assignment);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("color_code", _colorCode);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");
		attributeNames.put("duty_assignment_id", "dutyAssignmentId");
		attributeNames.put("group_id", "groupId");
		attributeNames.put("company_id", "companyId");
		attributeNames.put("create_date", "createDate");
		attributeNames.put("created_by", "createdBy");
		attributeNames.put("modified_date", "modifiedDate");
		attributeNames.put("modified_by", "modifiedBy");
		attributeNames.put("duty_type_id", "dutyTypeId");
		attributeNames.put("color_code", "colorCode");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("duty_assignment_id", 2L);

		columnBitmasks.put("group_id", 4L);

		columnBitmasks.put("company_id", 8L);

		columnBitmasks.put("create_date", 16L);

		columnBitmasks.put("created_by", 32L);

		columnBitmasks.put("modified_date", 64L);

		columnBitmasks.put("modified_by", 128L);

		columnBitmasks.put("duty_type_id", 256L);

		columnBitmasks.put("assignment", 512L);

		columnBitmasks.put("status", 1024L);

		columnBitmasks.put("color_code", 2048L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private DutyAssignment _escapedModel;

}