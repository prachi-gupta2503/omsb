/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package gov.omsb.tms.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import gov.omsb.tms.model.ProgramDurationDetails;
import gov.omsb.tms.model.ProgramDurationDetailsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ProgramDurationDetails service. Represents a row in the &quot;program_duration_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ProgramDurationDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProgramDurationDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProgramDurationDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class ProgramDurationDetailsModelImpl
	extends BaseModelImpl<ProgramDurationDetails>
	implements ProgramDurationDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a program duration details model instance should use the <code>ProgramDurationDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "program_duration_details";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"prog_duration_id", Types.BIGINT},
		{"program_id", Types.BIGINT}, {"group_id", Types.BIGINT},
		{"company_id", Types.BIGINT}, {"create_date", Types.TIMESTAMP},
		{"modified_date", Types.TIMESTAMP},
		{"ay_applicable_form", Types.VARCHAR}, {"no_of_blocks", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("prog_duration_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("program_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("group_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("company_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("create_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modified_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ay_applicable_form", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("no_of_blocks", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table program_duration_details (uuid_ VARCHAR(75) null,prog_duration_id LONG not null primary key,program_id LONG,group_id LONG,company_id LONG,create_date DATE null,modified_date DATE null,ay_applicable_form VARCHAR(75) null,no_of_blocks INTEGER)";

	public static final String TABLE_SQL_DROP =
		"drop table program_duration_details";

	public static final String ORDER_BY_JPQL =
		" ORDER BY programDurationDetails.progDurationId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY program_duration_details.prog_duration_id ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long AYAPPLICABLEFORM_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROGRAMID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROGDURATIONID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ProgramDurationDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _progDurationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProgDurationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _progDurationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProgramDurationDetails.class;
	}

	@Override
	public String getModelClassName() {
		return ProgramDurationDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ProgramDurationDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ProgramDurationDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProgramDurationDetails, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ProgramDurationDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ProgramDurationDetails, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ProgramDurationDetails, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ProgramDurationDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ProgramDurationDetails, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ProgramDurationDetails, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<ProgramDurationDetails, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ProgramDurationDetails, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ProgramDurationDetails, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ProgramDurationDetails, Object>>();
		Map<String, BiConsumer<ProgramDurationDetails, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<ProgramDurationDetails, ?>>();

		attributeGetterFunctions.put("uuid", ProgramDurationDetails::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<ProgramDurationDetails, String>)
				ProgramDurationDetails::setUuid);
		attributeGetterFunctions.put(
			"progDurationId", ProgramDurationDetails::getProgDurationId);
		attributeSetterBiConsumers.put(
			"progDurationId",
			(BiConsumer<ProgramDurationDetails, Long>)
				ProgramDurationDetails::setProgDurationId);
		attributeGetterFunctions.put(
			"programId", ProgramDurationDetails::getProgramId);
		attributeSetterBiConsumers.put(
			"programId",
			(BiConsumer<ProgramDurationDetails, Long>)
				ProgramDurationDetails::setProgramId);
		attributeGetterFunctions.put(
			"groupId", ProgramDurationDetails::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<ProgramDurationDetails, Long>)
				ProgramDurationDetails::setGroupId);
		attributeGetterFunctions.put(
			"companyId", ProgramDurationDetails::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<ProgramDurationDetails, Long>)
				ProgramDurationDetails::setCompanyId);
		attributeGetterFunctions.put(
			"createDate", ProgramDurationDetails::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<ProgramDurationDetails, Date>)
				ProgramDurationDetails::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", ProgramDurationDetails::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<ProgramDurationDetails, Date>)
				ProgramDurationDetails::setModifiedDate);
		attributeGetterFunctions.put(
			"ayApplicableForm", ProgramDurationDetails::getAyApplicableForm);
		attributeSetterBiConsumers.put(
			"ayApplicableForm",
			(BiConsumer<ProgramDurationDetails, String>)
				ProgramDurationDetails::setAyApplicableForm);
		attributeGetterFunctions.put(
			"noOfBlocks", ProgramDurationDetails::getNoOfBlocks);
		attributeSetterBiConsumers.put(
			"noOfBlocks",
			(BiConsumer<ProgramDurationDetails, Integer>)
				ProgramDurationDetails::setNoOfBlocks);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getProgDurationId() {
		return _progDurationId;
	}

	@Override
	public void setProgDurationId(long progDurationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_progDurationId = progDurationId;
	}

	@JSON
	@Override
	public long getProgramId() {
		return _programId;
	}

	@Override
	public void setProgramId(long programId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_programId = programId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalProgramId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("program_id"));
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("group_id"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("company_id"));
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getAyApplicableForm() {
		if (_ayApplicableForm == null) {
			return "";
		}
		else {
			return _ayApplicableForm;
		}
	}

	@Override
	public void setAyApplicableForm(String ayApplicableForm) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ayApplicableForm = ayApplicableForm;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalAyApplicableForm() {
		return getColumnOriginalValue("ay_applicable_form");
	}

	@JSON
	@Override
	public int getNoOfBlocks() {
		return _noOfBlocks;
	}

	@Override
	public void setNoOfBlocks(int noOfBlocks) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noOfBlocks = noOfBlocks;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(ProgramDurationDetails.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), ProgramDurationDetails.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProgramDurationDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ProgramDurationDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProgramDurationDetailsImpl programDurationDetailsImpl =
			new ProgramDurationDetailsImpl();

		programDurationDetailsImpl.setUuid(getUuid());
		programDurationDetailsImpl.setProgDurationId(getProgDurationId());
		programDurationDetailsImpl.setProgramId(getProgramId());
		programDurationDetailsImpl.setGroupId(getGroupId());
		programDurationDetailsImpl.setCompanyId(getCompanyId());
		programDurationDetailsImpl.setCreateDate(getCreateDate());
		programDurationDetailsImpl.setModifiedDate(getModifiedDate());
		programDurationDetailsImpl.setAyApplicableForm(getAyApplicableForm());
		programDurationDetailsImpl.setNoOfBlocks(getNoOfBlocks());

		programDurationDetailsImpl.resetOriginalValues();

		return programDurationDetailsImpl;
	}

	@Override
	public ProgramDurationDetails cloneWithOriginalValues() {
		ProgramDurationDetailsImpl programDurationDetailsImpl =
			new ProgramDurationDetailsImpl();

		programDurationDetailsImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		programDurationDetailsImpl.setProgDurationId(
			this.<Long>getColumnOriginalValue("prog_duration_id"));
		programDurationDetailsImpl.setProgramId(
			this.<Long>getColumnOriginalValue("program_id"));
		programDurationDetailsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("group_id"));
		programDurationDetailsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("company_id"));
		programDurationDetailsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("create_date"));
		programDurationDetailsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modified_date"));
		programDurationDetailsImpl.setAyApplicableForm(
			this.<String>getColumnOriginalValue("ay_applicable_form"));
		programDurationDetailsImpl.setNoOfBlocks(
			this.<Integer>getColumnOriginalValue("no_of_blocks"));

		return programDurationDetailsImpl;
	}

	@Override
	public int compareTo(ProgramDurationDetails programDurationDetails) {
		long primaryKey = programDurationDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ProgramDurationDetails)) {
			return false;
		}

		ProgramDurationDetails programDurationDetails =
			(ProgramDurationDetails)object;

		long primaryKey = programDurationDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ProgramDurationDetails> toCacheModel() {
		ProgramDurationDetailsCacheModel programDurationDetailsCacheModel =
			new ProgramDurationDetailsCacheModel();

		programDurationDetailsCacheModel.uuid = getUuid();

		String uuid = programDurationDetailsCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			programDurationDetailsCacheModel.uuid = null;
		}

		programDurationDetailsCacheModel.progDurationId = getProgDurationId();

		programDurationDetailsCacheModel.programId = getProgramId();

		programDurationDetailsCacheModel.groupId = getGroupId();

		programDurationDetailsCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			programDurationDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			programDurationDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			programDurationDetailsCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			programDurationDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		programDurationDetailsCacheModel.ayApplicableForm =
			getAyApplicableForm();

		String ayApplicableForm =
			programDurationDetailsCacheModel.ayApplicableForm;

		if ((ayApplicableForm != null) && (ayApplicableForm.length() == 0)) {
			programDurationDetailsCacheModel.ayApplicableForm = null;
		}

		programDurationDetailsCacheModel.noOfBlocks = getNoOfBlocks();

		return programDurationDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ProgramDurationDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ProgramDurationDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProgramDurationDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(ProgramDurationDetails)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ProgramDurationDetails>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					ProgramDurationDetails.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _progDurationId;
	private long _programId;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _ayApplicableForm;
	private int _noOfBlocks;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ProgramDurationDetails, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ProgramDurationDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("prog_duration_id", _progDurationId);
		_columnOriginalValues.put("program_id", _programId);
		_columnOriginalValues.put("group_id", _groupId);
		_columnOriginalValues.put("company_id", _companyId);
		_columnOriginalValues.put("create_date", _createDate);
		_columnOriginalValues.put("modified_date", _modifiedDate);
		_columnOriginalValues.put("ay_applicable_form", _ayApplicableForm);
		_columnOriginalValues.put("no_of_blocks", _noOfBlocks);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");
		attributeNames.put("prog_duration_id", "progDurationId");
		attributeNames.put("program_id", "programId");
		attributeNames.put("group_id", "groupId");
		attributeNames.put("company_id", "companyId");
		attributeNames.put("create_date", "createDate");
		attributeNames.put("modified_date", "modifiedDate");
		attributeNames.put("ay_applicable_form", "ayApplicableForm");
		attributeNames.put("no_of_blocks", "noOfBlocks");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("prog_duration_id", 2L);

		columnBitmasks.put("program_id", 4L);

		columnBitmasks.put("group_id", 8L);

		columnBitmasks.put("company_id", 16L);

		columnBitmasks.put("create_date", 32L);

		columnBitmasks.put("modified_date", 64L);

		columnBitmasks.put("ay_applicable_form", 128L);

		columnBitmasks.put("no_of_blocks", 256L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ProgramDurationDetails _escapedModel;

}