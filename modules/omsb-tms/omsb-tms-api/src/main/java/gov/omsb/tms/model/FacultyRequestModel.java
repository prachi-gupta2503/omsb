/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package gov.omsb.tms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the FacultyRequest service. Represents a row in the &quot;faculty_request&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>gov.omsb.tms.model.impl.FacultyRequestModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>gov.omsb.tms.model.impl.FacultyRequestImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FacultyRequest
 * @generated
 */
@ProviderType
public interface FacultyRequestModel
	extends BaseModel<FacultyRequest>, ShardedModel, StagedModel,
			WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a faculty request model instance should use the {@link FacultyRequest} interface instead.
	 */

	/**
	 * Returns the primary key of this faculty request.
	 *
	 * @return the primary key of this faculty request
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this faculty request.
	 *
	 * @param primaryKey the primary key of this faculty request
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this faculty request.
	 *
	 * @return the uuid of this faculty request
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this faculty request.
	 *
	 * @param uuid the uuid of this faculty request
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the faculty request ID of this faculty request.
	 *
	 * @return the faculty request ID of this faculty request
	 */
	public long getFacultyRequestId();

	/**
	 * Sets the faculty request ID of this faculty request.
	 *
	 * @param facultyRequestId the faculty request ID of this faculty request
	 */
	public void setFacultyRequestId(long facultyRequestId);

	/**
	 * Returns the group ID of this faculty request.
	 *
	 * @return the group ID of this faculty request
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this faculty request.
	 *
	 * @param groupId the group ID of this faculty request
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this faculty request.
	 *
	 * @return the company ID of this faculty request
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this faculty request.
	 *
	 * @param companyId the company ID of this faculty request
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this faculty request.
	 *
	 * @return the create date of this faculty request
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this faculty request.
	 *
	 * @param createDate the create date of this faculty request
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the created by of this faculty request.
	 *
	 * @return the created by of this faculty request
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this faculty request.
	 *
	 * @param createdBy the created by of this faculty request
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the modified date of this faculty request.
	 *
	 * @return the modified date of this faculty request
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this faculty request.
	 *
	 * @param modifiedDate the modified date of this faculty request
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the modified by of this faculty request.
	 *
	 * @return the modified by of this faculty request
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this faculty request.
	 *
	 * @param modifiedBy the modified by of this faculty request
	 */
	public void setModifiedBy(long modifiedBy);

	/**
	 * Returns the program ID of this faculty request.
	 *
	 * @return the program ID of this faculty request
	 */
	public long getProgramId();

	/**
	 * Sets the program ID of this faculty request.
	 *
	 * @param programId the program ID of this faculty request
	 */
	public void setProgramId(long programId);

	/**
	 * Returns the potential faculty ID of this faculty request.
	 *
	 * @return the potential faculty ID of this faculty request
	 */
	public long getPotentialFacultyId();

	/**
	 * Sets the potential faculty ID of this faculty request.
	 *
	 * @param potentialFacultyId the potential faculty ID of this faculty request
	 */
	public void setPotentialFacultyId(long potentialFacultyId);

	/**
	 * Returns the potential faculty type ID of this faculty request.
	 *
	 * @return the potential faculty type ID of this faculty request
	 */
	public long getPotentialFacultyTypeId();

	/**
	 * Sets the potential faculty type ID of this faculty request.
	 *
	 * @param potentialFacultyTypeId the potential faculty type ID of this faculty request
	 */
	public void setPotentialFacultyTypeId(long potentialFacultyTypeId);

	/**
	 * Returns the lastest faculty request state ID of this faculty request.
	 *
	 * @return the lastest faculty request state ID of this faculty request
	 */
	public long getLastestFacultyRequestStateId();

	/**
	 * Sets the lastest faculty request state ID of this faculty request.
	 *
	 * @param lastestFacultyRequestStateId the lastest faculty request state ID of this faculty request
	 */
	public void setLastestFacultyRequestStateId(
		long lastestFacultyRequestStateId);

	/**
	 * Returns the covering letter ID of this faculty request.
	 *
	 * @return the covering letter ID of this faculty request
	 */
	public long getCoveringLetterId();

	/**
	 * Sets the covering letter ID of this faculty request.
	 *
	 * @param coveringLetterId the covering letter ID of this faculty request
	 */
	public void setCoveringLetterId(long coveringLetterId);

	/**
	 * Returns the cv ID of this faculty request.
	 *
	 * @return the cv ID of this faculty request
	 */
	public long getCvId();

	/**
	 * Sets the cv ID of this faculty request.
	 *
	 * @param cvId the cv ID of this faculty request
	 */
	public void setCvId(long cvId);

	/**
	 * Returns the passport copy ID of this faculty request.
	 *
	 * @return the passport copy ID of this faculty request
	 */
	public long getPassportCopyId();

	/**
	 * Sets the passport copy ID of this faculty request.
	 *
	 * @param passportCopyId the passport copy ID of this faculty request
	 */
	public void setPassportCopyId(long passportCopyId);

	/**
	 * Returns the notional ID copy ID of this faculty request.
	 *
	 * @return the notional ID copy ID of this faculty request
	 */
	public long getNotionalIdCopyId();

	/**
	 * Sets the notional ID copy ID of this faculty request.
	 *
	 * @param notionalIdCopyId the notional ID copy ID of this faculty request
	 */
	public void setNotionalIdCopyId(long notionalIdCopyId);

	/**
	 * Returns the status of this faculty request.
	 *
	 * @return the status of this faculty request
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this faculty request.
	 *
	 * @param status the status of this faculty request
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this faculty request.
	 *
	 * @return the status by user ID of this faculty request
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this faculty request.
	 *
	 * @param statusByUserId the status by user ID of this faculty request
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this faculty request.
	 *
	 * @return the status by user uuid of this faculty request
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this faculty request.
	 *
	 * @param statusByUserUuid the status by user uuid of this faculty request
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this faculty request.
	 *
	 * @return the status by user name of this faculty request
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this faculty request.
	 *
	 * @param statusByUserName the status by user name of this faculty request
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this faculty request.
	 *
	 * @return the status date of this faculty request
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this faculty request.
	 *
	 * @param statusDate the status date of this faculty request
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this faculty request is approved.
	 *
	 * @return <code>true</code> if this faculty request is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this faculty request is denied.
	 *
	 * @return <code>true</code> if this faculty request is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this faculty request is a draft.
	 *
	 * @return <code>true</code> if this faculty request is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this faculty request is expired.
	 *
	 * @return <code>true</code> if this faculty request is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this faculty request is inactive.
	 *
	 * @return <code>true</code> if this faculty request is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this faculty request is incomplete.
	 *
	 * @return <code>true</code> if this faculty request is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this faculty request is pending.
	 *
	 * @return <code>true</code> if this faculty request is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this faculty request is scheduled.
	 *
	 * @return <code>true</code> if this faculty request is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public FacultyRequest cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}